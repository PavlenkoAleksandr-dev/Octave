% Лабораторная работа №8: Фильтрация дискретных сигналов с использованием фильтра Гёрцеля

% Параметры сигнала
Fs = 1000;               % Частота дискретизации (Гц)
T = 1;                   % Длительность сигнала (сек)
t = 0:1/Fs:T-1/Fs;       % Временная ось
f1 = 50;                 % Частота первой спектральной компоненты (Гц)
f2 = 150;                % Частота второй спектральной компоненты (Гц)
f3 = 300;                % Частота третьей спектральной компоненты (Гц)
f4 = 500;                % Частота четвертой спектральной компоненты (Гц)

% Генерация сигнала с несколькими спектральными компонентами
signal = sin(2*pi*f1*t) + sin(2*pi*f2*t) + sin(2*pi*f3*t) + sin(2*pi*f4*t);

% Добавление белого шума
noise = 0.5 * randn(size(t));   % Белый шум
signal_with_noise = signal + noise;  % Сигнал с шумом

% Визуализация исходного сигнала с шумом
figure;
subplot(3,1,1);
plot(t, signal_with_noise);
title('Исходный сигнал с шумом');
xlabel('Время (сек)');
ylabel('Амплитуда');

% Реализация фильтра Гёрцеля

% Параметры фильтра
f_cutoff = 100;            % Частота среза фильтра (Гц)
omega_c = 2*pi*f_cutoff/Fs;   % Нормированная угловая частота среза

% Коэффициенты фильтра Гёрцеля
a1 = -2*cos(omega_c);
a2 = 1;
b0 = (1 - cos(omega_c)) / 2;
b1 = 1 - cos(omega_c);
b2 = b0;

% Применение разностного уравнения фильтра
N = length(signal_with_noise);    % Длина сигнала
filtered_signal = zeros(1, N);

for n = 3:N
    filtered_signal(n) = b0*signal_with_noise(n) + b1*signal_with_noise(n-1) + b2*signal_with_noise(n-2) ...
                         - a1*filtered_signal(n-1) - a2*filtered_signal(n-2);
end

% Визуализация отфильтрованного сигнала
subplot(3,1,2);
plot(t, filtered_signal);
title('Отфильтрованный сигнал с использованием фильтра Гёрцеля');
xlabel('Время (сек)');
ylabel('Амплитуда');

% Построение частотной характеристики фильтра
freqz([b0 b1 b2], [1 a1 a2], 1024, Fs);
title('Частотная характеристика фильтра Гёрцеля');

% Построение спектров исходного и отфильтрованного сигнала
subplot(3,1,3);
% Спектр исходного сигнала
subplot(2,1,1);
spec_orig = abs(fft(signal_with_noise));
f_axis = linspace(0, Fs, length(spec_orig));
plot(f_axis, spec_orig);
title('Спектр исходного сигнала с шумом');
xlabel('Частота (Гц)');
ylabel('Амплитуда');

% Спектр отфильтрованного сигнала
subplot(2,1,2);
spec_filtered = abs(fft(filtered_signal));
plot(f_axis, spec_filtered);
title('Спектр отфильтрованного сигнала');
xlabel('Частота (Гц)');
ylabel('Амплитуда');

% Выводы:
disp('Фильтрация выполнена с использованием фильтра Гёрцеля. На частотах выше 100 Гц фильтр эффективно подавляет высокочастотный шум.');

